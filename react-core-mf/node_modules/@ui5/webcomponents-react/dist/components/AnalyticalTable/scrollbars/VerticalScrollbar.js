import { ThemingParameters, useStylesheet, useSyncRef } from '@ui5/webcomponents-react-base';
import { clsx } from 'clsx';
import React, { forwardRef, useEffect, useRef } from 'react';
import { FlexBoxDirection, GlobalStyleClasses } from '../../../enums/index.js';
import { FlexBox } from '../../FlexBox/index.js';
import { classNames, styleData } from './VerticalScrollbar.module.css.js';
export const VerticalScrollbar = /*#__PURE__*/forwardRef((props, ref) => {
  const {
    internalRowHeight,
    tableRef,
    handleVerticalScrollBarScroll,
    tableBodyHeight,
    scrollContainerRef,
    parentRef
  } = props;
  const [componentRef, containerRef] = useSyncRef(ref);
  const scrollElementRef = useRef(null);
  useStylesheet(styleData, VerticalScrollbar.displayName);
  const hasHorizontalScrollbar = tableRef?.current?.offsetWidth !== tableRef?.current?.scrollWidth;
  useEffect(() => {
    const observer = new ResizeObserver(([entry]) => {
      if (containerRef.current && parentRef.current && entry.target.getBoundingClientRect().height > 0) {
        containerRef.current.scrollTop = parentRef.current.scrollTop;
      }
    });
    if (scrollElementRef.current) {
      observer.observe(scrollElementRef.current);
    }
    return () => {
      observer.disconnect();
    };
  }, []);
  const horizontalScrollbarSectionStyles = clsx(hasHorizontalScrollbar && classNames.bottomSection);
  return /*#__PURE__*/React.createElement(FlexBox, {
    direction: FlexBoxDirection.Column,
    style: {
      position: 'relative'
    },
    "data-component-name": "AnalyticalTableVerticalScrollbarContainer"
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      height: `${internalRowHeight}px`
    },
    className: classNames.headerSection
  }), /*#__PURE__*/React.createElement("div", {
    ref: componentRef,
    style: {
      height: tableRef.current ? `${tableBodyHeight}px` : '0'
    },
    onScroll: handleVerticalScrollBarScroll,
    "data-native-scrollbar": props['data-native-scrollbar'],
    className: `${GlobalStyleClasses.sapScrollBar} ${classNames.scrollbar}`,
    "data-component-name": "AnalyticalTableVerticalScrollbar"
  }, /*#__PURE__*/React.createElement("div", {
    ref: scrollElementRef,
    style: {
      height: `${scrollContainerRef.current?.scrollHeight}px`,
      width: '1px',
      backgroundColor: ThemingParameters.sapList_Background
    }
  })), /*#__PURE__*/React.createElement("div", {
    className: horizontalScrollbarSectionStyles
  }));
});
VerticalScrollbar.displayName = 'VerticalScrollbar';