'use client';

import { useIsomorphicId } from '@ui5/webcomponents-react-base';
import React, { useEffect, useMemo } from 'react';
import { GroupContext, useFormContext } from '../Form/FormContext.js';
import { FormGroupTitle } from './FormGroupTitle.js';
/**
 * The `FormGroup` encapsulates `FormItems` into groups and allows setting a title for each group.
 *
 * __Note:__ Setting a React Ref is not supported by this component.
 */
const FormGroup = props => {
  const {
    titleText,
    children,
    as = 'h5',
    style,
    ...rest
  } = props;
  const {
    formGroups: layoutInfos,
    registerItem,
    unregisterItem,
    labelSpan,
    recalcTrigger
  } = useFormContext();
  const uniqueId = useIsomorphicId();
  useEffect(() => {
    registerItem?.(uniqueId, 'formGroup');
    return () => unregisterItem?.(uniqueId);
  }, [uniqueId, registerItem, unregisterItem, recalcTrigger]);
  const layoutInfo = useMemo(() => layoutInfos?.find(({
    id: groupId
  }) => uniqueId === groupId), [layoutInfos, uniqueId]);
  if (!layoutInfo) return null;
  const {
    columnIndex,
    rowIndex
  } = layoutInfo;
  const localRowIndex = labelSpan === 12 ? rowIndex - 1 : rowIndex;
  return /*#__PURE__*/React.createElement(GroupContext.Provider, {
    value: {
      id: uniqueId
    }
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroupTitle, {
    ...rest,
    titleText: titleText,
    style: {
      ...style,
      display: titleText ? 'unset' : 'none',
      gridColumnStart: columnIndex * 12 + 1,
      gridRowStart: localRowIndex,
      // smaller margin for groups in first row with form title
      marginBlockStart: localRowIndex === 2 ? '0.5rem' : '1rem'
    },
    as: as
  }), children));
};
FormGroup.displayName = 'FormGroup';
export { FormGroup };