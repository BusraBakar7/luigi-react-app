import type { MouseEventHandler, ReactNode } from 'react';
import React from 'react';
import type { IndicationColor } from '../../enums/index.js';
import { ValueState } from '../../enums/index.js';
import type { CommonProps } from '../../types/index.js';
export interface ObjectStatusPropTypes extends CommonProps {
    /**
     * Indicates if the ObjectStatus is rendered as inactive `div` or interactive `button` and therefore can be clicked/tapped by the user or not.
     *
     * **Note:** If this prop is set to `true`, you should also set the `children` or `icon` prop.
     *
     *
     * @since 0.16.6
     */
    active?: boolean;
    /**
     * Defines the icon in front of the `ObjectStatus` text.
     *
     * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use `Icon` in order to preserve the intended design.
     */
    icon?: ReactNode;
    /**
     * Determines whether the background color reflects the set state instead of the text
     *
     * @since 0.16.6
     */
    inverted?: boolean;
    /**
     * Defines if the component should be rendered in large design.
     *
     * @since 1.21.0
     */
    large?: boolean;
    /**
     * Defines the text of the `ObjectStatus`.
     *
     * __Note:__ Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.
     */
    children?: ReactNode;
    /**
     * Defines the value state of the <code>ObjectStatus</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> <li><code>Success</code></li> <li><code>Information</code></li> </ul>
     *
     * Since version 0.17.0 the state property also accepts values from enum `IndicationColor`.
     */
    state?: ValueState | keyof typeof ValueState | IndicationColor | keyof typeof IndicationColor;
    /**
     * Defines whether the default icon for each `ValueState` should be displayed.
     *
     * __Note:__ If the `icon` prop was set, `showDefaultIcon` has no effect.
     */
    showDefaultIcon?: boolean;
    /**
     * Specifies if an empty indicator should be displayed when there is no text.
     *
     * @since 1.19.0
     */
    emptyIndicator?: boolean;
    /**
     * Enables overriding of the default state announcement read by screen readers.
     *
     * @since 1.19.0
     */
    stateAnnouncementText?: string;
    /**
     * Fires when the user clicks/taps on active text.
     *
     * __Note:__ This prop has no effect if `active` is not set to `true`.
     *
     * __Note:__ In order to support legacy code, `HTMLDivElement` is still supported even though the `click` event is never fired if the component isn't `active`.
     *
     * @since 0.16.6
     */
    onClick?: MouseEventHandler<HTMLButtonElement | HTMLDivElement>;
}
/**
 * Status information that can be either text with a value state, or an icon.
 */
declare const ObjectStatus: React.ForwardRefExoticComponent<ObjectStatusPropTypes & React.RefAttributes<HTMLDivElement | HTMLButtonElement>>;
export { ObjectStatus };
