import type { FC, ReactNode } from 'react';
export interface ThemeProviderPropTypes {
    children: ReactNode;
    withoutModalsProvider?: boolean;
    /**
     * You can set this flag to true in case you have imported our static CSS Bundle/s in your application.
     * This will prevent the ThemeProvider from injecting the CSS during runtime again.
     *
     * * __main:__ `import '@ui5/webcomponents-react/styles.css'`
     * * __charts:__ `import '@ui5/webcomponents-react-charts/styles.css'`
     */
    staticCssInjected?: boolean;
}
/**
 * In order to use `@ui5/webcomponents-react` you have to wrap your application's root component into the ThemeProvider.
 *
 * __Note:__ Per default, the `ThemeProvider` adds another provider for the [Modals](https://sap.github.io/ui5-webcomponents-react/?path=/docs/user-feedback-modals--docs) API.
 * If you don't use this, you can omit it by setting the prop `withoutModalsProvider` to `true`. (With v2.0, the `Modals` provider will be offered separately to reduce overhead)
 *
 * __Note:__ Per default, the `ThemeProvider` injects the CSS for the components during runtime. If you have imported our static CSS bundle/s in your application, you can set the prop `staticCssInjected` to `true` to prevent this.
 */
declare const ThemeProvider: FC<ThemeProviderPropTypes>;
export { ThemeProvider };
